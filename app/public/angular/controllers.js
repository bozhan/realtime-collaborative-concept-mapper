"use strict";var BaseCtrl,SocketCtrl,__bind=function(t,e){return function(){return t.apply(e,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(t,e){function o(){this.constructor=t}for(var n in e)__hasProp.call(e,n)&&(t[n]=e[n]);return o.prototype=e.prototype,t.prototype=new o,t.__super__=e.prototype,t};SocketCtrl=function(t,e){return e.on("login",function(t){return console.log("Logging started for "+t)}),e.on("sendConcept",function(e){return console.log("Loading concept "+t.ctrl.meta.target.objectType),t.ctrl.setConceptMapFromJSON(e)}),e.on("createConcept",function(e){return t.ctrl.createConcept(e.id,e.content,e.x,e.y,e.type)}),e.on("deleteConcept",function(e){return $.each($("#ut_tools_conceptmapper_map .ut_tools_conceptmapper_concept"),function(o,n){return e===$(n).attr("id")?t.ctrl.removeConcept(n):void 0})}),e.on("deleteAll",function(){return t.ctrl.deleteAll()}),e.on("lockConcept",function(t){return console.log("Locking concept: "+t),jsPlumb.repaintEverything()}),e.on("moveConcept",function(e){return t.ctrl.conceptExists(e.id)?t.ctrl.moveConcept(e.id,e.x,e.y):console.log("No concept found with id:"+e.id)}),e.on("createRelation",function(t){return console.log("Create Relation b/w "+t.source+" and "+t.target),jsPlumb.connect(t),jsPlumb.repaintEverything()}),e.on("deleteRelation",function(e){return console.log("Create Relation b/w "+e.source+" and "+e.target),t.ctrl.deleteConnectionsBetween(e.source,e.target)}),e.on("updateConceptContent",function(e){return console.log("Update content of: "+e.id+" with: "+e.content),t.ctrl.updateConceptContent(e.id,e.content)}),e.on("updateRelationLabel",function(e){return console.log("Update relation label of: "+e.id+" with: "+e.content),t.ctrl.updateRelationLabel(e.id,e.content)}),e.on("sessionId",function(e){return console.log("sessionID:"+e),t.ctrl.actionLogger.setProvider({objectType:"dummy ILS",id:e})})},SocketCtrl.$inject=["$scope","Socket"],BaseCtrl=function(){function t(){console.log("All your base are belong to us!"),window.ut=window.ut||{},window.ut.tools=window.ut.tools||{},window.ut.tools.conceptmapper=window.ut.tools.conceptmapper||{},window.sessionId=ut.commons.utils.generateUUID(),window.notificationClient=new ude.commons.NotificationClient(window.sessionId)}return t.prototype.toJson=function(t){return JSON.stringify(t)},t}(),window.ut.tools.conceptmapper.ConceptMapper=function(t){function e(t,o){this.$scope=t,this.loadConceptMap=__bind(this.loadConceptMap,this),this.saveConceptMap=__bind(this.saveConceptMap,this),this.deleteConnectionsBetween=__bind(this.deleteConnectionsBetween,this),this.sendDeleteConnectionsBetween=__bind(this.sendDeleteConnectionsBetween,this),this.connectionExists=__bind(this.connectionExists,this),this.onClickEdgeHandler=__bind(this.onClickEdgeHandler,this),this.setConceptLinkMode=__bind(this.setConceptLinkMode,this),this.setConceptNodeMode=__bind(this.setConceptNodeMode,this),this.deleteAll=__bind(this.deleteAll,this),this.onClickHandlerTrashcan=__bind(this.onClickHandlerTrashcan,this),this.removeConcept=__bind(this.removeConcept,this),this.onBlurHandlerInjectParagraph=__bind(this.onBlurHandlerInjectParagraph,this),this.onBlurHandlerInjectRelation=__bind(this.onBlurHandlerInjectRelation,this),this.onClickHandlerConnectionLabel=__bind(this.onClickHandlerConnectionLabel,this),this.onClickHandlerInjectCombobox=__bind(this.onClickHandlerInjectCombobox,this),this.onClickHandlerInjectTextarea=__bind(this.onClickHandlerInjectTextarea,this),this._initJsPlumb=__bind(this._initJsPlumb,this),this._initDnD=__bind(this._initDnD,this),this.notificationPremise=__bind(this.notificationPremise,this),this._init=__bind(this._init,this),this._logAction=__bind(this._logAction,this),this.consumeNotification=__bind(this.consumeNotification,this),this.configure=__bind(this.configure,this),e.__super__.constructor.apply(this,arguments),this.conceptTitle="Concept Map",this.socket=o,window.mySocket=this.socket,$(window).unload(function(){return this.socket.emit("disconnect")}),console.log("Initializing ConceptMapper."),this.meta={target:{objectType:"conceptMap",id:ut.commons.utils.generateUUID(),displayName:"unnamed concept map",user:"defaultUser"},generator:{objectType:"application",url:document.URL,id:ut.commons.utils.generateUUID(),displayName:"ut.tools.conceptmapper"}},this.LINK_MODE="link_mode",this.NODE_MODE="node_mode",this.mode=this.NODE_MODE,this.isCurrentlyLogging=!0,this.sourceNode=void 0,this.targetNode=void 0,this.editingLabel=void 0,this.storage=void 0,this.actionLogger=new ut.commons.actionlogging.ActionLogger,this.configuration=window.ut.tools.conceptmapper.defaultConfiguration,this.configure(window.ut.tools.conceptmapper.defaultConfiguration),this._init(),this._logAction("application_started",{})}return __extends(e,t),e.prototype.login=function(){return this.meta.target.user=this.$scope.user,console.log("Logged in as "+this.meta.target.user),this.actionLogger.setTarget(this.meta.target),this.socket.emit("login",{user:this.meta.target.user})},e.prototype.getUser=function(){return this.meta.target.user},e.prototype.configure=function(t){var e=this;return $.each(t,function(t,o){switch(e.configuration[""+t].value=o.value,t){case"actionlogging":return e.actionLogger.setLoggingTargetByName(o.value),e.actionLogger.setTarget(e.meta.target),e.actionLogger.setGenerator(e.meta.generator),e.socket.emit("sessionId",window.sessionId);case"relations":return e._initJsPlumb();case"textarea_concepts":return $("#ut_tools_conceptmapper_toolbar_list").find(".ut_tools_conceptmapper_conceptTextarea").each(function(t,e){return"false"===o.value?$(e).hide():$(e).show()});case"combobox_concepts":return $("#ut_tools_conceptmapper_toolbar_list").find(".ut_tools_conceptmapper_conceptSelector").each(function(t,e){return"false"===o.value?$(e).hide():$(e).show()})}})},e.prototype.consumeNotification=function(t){return"true"===this.configuration.debug.value&&(console.log("ConceptMapper.consumeNotification: received notification: "),console.log(t)),"prompt"===t.type&&"true"===this.configuration.show_prompts.value?($("#ut_tools_conceptmapper_dialog").text(t.content.text),$("#ut_tools_conceptmapper_dialog").dialog({title:"Notification",resizable:!1,modal:!0,autoOpen:!1,height:150,closeOnEscape:!1,dialogClass:"ut_tools_conceptmapper_dialog",buttons:{Ok:function(){return $("#ut_tools_conceptmapper_dialog").dialog("close")}}}),$("#ut_tools_conceptmapper_dialog").dialog("open"),$(".ui-dialog :button").blur()):"configuration"===t.type?this.configure(t.content.configuration):console.log("ConceptMapper: Notification wasn't a 'prompt' or prompting is disabled; doing nothing.")},e.prototype._logAction=function(t,e){return this.isCurrentlyLogging&&this.actionLogger?this.actionLogger.log(t,e):void 0},e.prototype._init=function(){var t=this;return $("#ut_tools_conceptmapper_linkButton").click(function(){return t.mode===t.LINK_MODE?t.setMode(t.NODE_MODE):t.setMode(t.LINK_MODE)}),this.storage=new ut.commons.persistency.FileStorage,$("#ut_tools_conceptmapper_store").click(this.saveConceptMap),$("#ut_tools_conceptmapper_retrieve").click(this.loadConceptMap),this._initDnD(),this._initJsPlumb(),void 0!==window.notificationClient?(window.notificationClient.register(this.notificationPremise,this.consumeNotification),console.log("ConceptMapper.init: notificationClient found and registered.")):console.log("ConceptMapper.init: notificationClient not found.")},e.prototype.notificationPremise=function(){return!0},e.prototype._initDnD=function(){var t=this;return $("#ut_tools_conceptmapper_toolbar .ut_tools_conceptmapper_concept").draggable({helper:"clone",cursor:"move",containment:"#ut_tools_conceptmapper_root"}),$("#ut_tools_conceptmapper_map").bind("dragover",function(){return!1}),$("#ut_tools_conceptmapper_map").droppable(),$("#ut_tools_conceptmapper_map").bind("drop",function(e,o){return o&&$(o.draggable).hasClass("ut_tools_hypothesis_condition")?!1:(o&&$(o.draggable).hasClass("ut_tools_conceptmapper_template")?("true"===t.configuration.debug.value&&console.log("Concept template dropped. Clone and add to map."),$(o.draggable).hasClass("ut_tools_conceptmapper_conceptTextarea")?t.sendCreateConcept(ut.commons.utils.generateUUID(),$(o.draggable).text(),o.position.left,o.position.top,"ut_tools_conceptmapper_conceptTextarea"):$(o.draggable).hasClass("ut_tools_conceptmapper_conceptSelector")&&t.sendCreateConcept(ut.commons.utils.generateUUID(),$(o.draggable).text(),o.position.left,o.position.top,"ut_tools_conceptmapper_conceptSelector")):e.originalEvent.dataTransfer&&"true"===t.configuration.drop_external.value&&t.sendCreateConcept(ut.commons.utils.generateUUID(),e.originalEvent.dataTransfer.getData("Text"),e.originalEvent.clientX,e.originalEvent.clientY,"ut_tools_conceptmapper_conceptTextarea"),!1)}),$("#ut_tools_conceptmapper_trashcan").click(this.onClickHandlerTrashcan),$("#ut_tools_conceptmapper_trashcan").droppable({accept:".ut_tools_conceptmapper_concept",drop:function(e,o){return t.sendRemoveConcept(o.draggable)}}),$("#ut_tools_conceptmapper_notification").click(function(){var e,o;return o={type:"prompt",content:{text:"The selection of pre-defined concepts has been changed."}},e={type:"configuration",content:{configuration:{concepts:{value:["length","mass","time"]}}}},t.consumeNotification(o),t.consumeNotification(e)}),$("#ut_tools_conceptmapper_settings").click(function(){return new ut.tools.conceptmapper.ConfigDialog(t.configuration,t.configure)})},e.prototype._initJsPlumb=function(){var t,e=this;return t={Connector:["Bezier",{curviness:500}],ConnectorZIndex:0,DragOptions:{cursor:"pointer",zIndex:2e3},PaintStyle:{strokeStyle:"#00b7cd",lineWidth:4},EndpointStyle:{},Anchor:["Perimeter",{shape:"Ellipse"}],ConnectionOverlays:[["Arrow",{location:.7},{foldback:.7,fillStyle:"#00b7cd",width:20}],["Label",{label:this.configuration.relations.value[0],location:.5,id:"label"}]],Detachable:!1,Reattach:!1},jsPlumb.importDefaults(t),jsPlumb.setRenderMode(jsPlumb.SVG),jsPlumb.unbind("jsPlumbConnection"),jsPlumb.bind("jsPlumbConnection",function(t){var o;return t.connection.getOverlay("label").bind("click",e.onClickHandlerConnectionLabel),o={objectType:"relation",id:t.connection.id,content:t.connection.getOverlay("label").getLabel(),source:t.connection.sourceId,target:t.connection.targetId},e._logAction("add",o)})},e.prototype.initConceptMapDropHandler=function(){return $("#ut_tools_conceptmapper_map").bind("dragover",function(){return!1}),$("#ut_tools_conceptmapper_map").droppable(),$("#ut_tools_conceptmapper_map").bind("drop",function(t,e){return e&&$(e.draggable).hasClass("ut_tools_hypothesis_condition")?!1:(e&&$(e.draggable).hasClass("ut_tools_conceptmapper_template")?"true"===this.configuration.debug.value&&console.log("Concept template dropped. Clone and add to map."):t.originalEvent.dataTransfer&&sendCreateConcept(ut.commons.utils.generateUUID(),t.originalEvent.dataTransfer.getData("Text"),t.originalEvent.clientX,t.originalEvent.clientY,"ut_tools_conceptmapper_conceptTextarea"),!1)})},e.prototype.sendCreateConcept=function(t,e,o,n,i){var c;return this.createConcept(t,e,o,n,i),c=this.getConceptById(t),this.socket.emit("createConcept",JSON.stringify(c))},e.prototype.createConcept=function(t,e,o,n,i){var c,r;return r=$("<div>"),r.attr("id",t),r.addClass("ut_tools_conceptmapper_concept"),r.append($("<p/>").html(nl2br(e))),jsPlumb.draggable(r,{containment:"#ut_tools_conceptmapper_root",cursor:"move",revert:"invalid",iframeFix:!0,delay:50,start:function(){return window.mySocket.emit("startMoveConcept",t)},drag:function(){var e;return e={id:t,x:r.css("left"),y:r.css("top")},window.mySocket.emit("dragConcept",JSON.stringify(e))},stop:function(){var e;return e={id:t,x:r.css("left"),y:r.css("top")},window.mySocket.emit("stoptMoveConcept",JSON.stringify(e))}}),r.css("position","absolute"),r.css("top",n),r.css("left",o),r.addClass(i),"ut_tools_conceptmapper_conceptTextarea"===i?r.click(this.onClickHandlerInjectTextarea):r.click(this.onClickHandlerInjectCombobox),$("#ut_tools_conceptmapper_map").append(r),this.mode===this.LINK_MODE?this.setConceptLinkMode(r):this.mode===this.LINK_MODE&&this.setConceptNodeMode(r),c={objectType:"concept",id:t,content:e},this._logAction("add",c)},e.prototype.getConceptById=function(t){var e,o,n,i;for(o=this.getConcepts(),n=0,i=o.length;i>n;n++)if(e=o[n],e.id===t)return e},e.prototype.conceptExists=function(t){var e,o,n,i;for(o=this.getConcepts(),n=0,i=o.length;i>n;n++)if(e=o[n],e.id===t)return!0;return!1},e.prototype.getConcepts=function(){var t;return t=[],$.each($("#ut_tools_conceptmapper_map .ut_tools_conceptmapper_concept"),function(e,o){var n;return n={},n.x=$(o).offset().left,n.y=$(o).offset().top,n.content=$(o).find("p").text(),n.id=$(o).attr("id"),n.type=$(o).hasClass("ut_tools_conceptmapper_conceptSelector")?"ut_tools_conceptmapper_conceptSelector":"ut_tools_conceptmapper_conceptTextarea",t.push(n)}),t},e.prototype.moveConcept=function(t,e,o){return $.each($("#ut_tools_conceptmapper_map .ut_tools_conceptmapper_concept"),function(n,i){return t===$(i).attr("id")?($(i).css("top",o),$(i).css("left",e),jsPlumb.repaintEverything()):void 0})},e.prototype.updateConceptContent=function(t,e){return $.each($("#ut_tools_conceptmapper_map .ut_tools_conceptmapper_concept"),function(o,n){var i;return t===$(n).attr("id")?(i=$("<p/>").html(e),$(n).find("p").replaceWith(i),jsPlumb.repaintEverything()):void 0})},e.prototype.updateRelationLabel=function(t,e){var o,n;return o=this.getConnectionById(t),n=o.getOverlay("label"),n.setLabel(e)},e.prototype.onClickHandlerInjectTextarea=function(t){var e,o;return this.mode===this.LINK_MODE?this.onClickEdgeHandler(t):$(t.target).is("div")?void 0:(e=$(t.target),o=$("<textarea/>").val(e.text()),this.contentBeforeEdit=e.text(),o.autogrow(),e.replaceWith(o),o.on("blur",this.onBlurHandlerInjectParagraph),o.focus())},e.prototype.onClickHandlerInjectCombobox=function(t){var e,o;return this.mode===this.LINK_MODE?this.onClickEdgeHandler(t):$(t.target).is("div")?void 0:(e=$(t.target),o=$("<input/>").val(e.text()),this.contentBeforeEdit=e.text(),o.autocomplete({source:this.configuration.concepts.value,minLength:0}),e.replaceWith(o),o.blur(this.onBlurHandlerInjectParagraph),o.autocomplete("search",""),o.focus())},e.prototype.onClickHandlerConnectionLabel=function(t){var e;return $("#"+t.canvas.id).find("input").length?$("#"+t.canvas.id).find("input").autocomplete("search",""):(this.editingLabel=t,e=$("<input/>").val(this.editingLabel.getLabel()),this.labelBeforeEdit=this.editingLabel.getLabel(),e.autocomplete({source:this.configuration.relations.value,minLength:0}),$("#"+t.canvas.id).text(""),e.addClass("_jsPlumb_overlay"),e.css("text-align","left"),e.css("font-size","medium"),$("#"+t.canvas.id).append(e),e.blur(this.onBlurHandlerInjectRelation),e.autocomplete("search",""),e.focus(),jsPlumb.repaintEverything())},e.prototype.onBlurHandlerInjectRelation=function(t){var e,o,n;return o=nl2br($(t.target).val()),this.editingLabel.setLabel(o),$(t.target).parent().text(this.editingLabel.getLabel()),$(t.target).remove(),jsPlumb.repaintEverything(),o!==this.labelBeforeEdit&&(n={objectType:"relation",id:this.editingLabel.component.id,content:o},e={id:this.editingLabel.component.id,content:o},this.socket.emit("updateRelationLabel",JSON.stringify(e)),this._logAction("update",n)),this.labelBeforeEdit="",this.editingLabel=void 0},e.prototype.onBlurHandlerInjectParagraph=function(t){var e,o,n,i,c;return o=$(t.target),n=nl2br(o.val()),c=$("<p/>").html(n),o.replaceWith(c),jsPlumb.repaintEverything(),n!==this.contentBeforeEdit&&(i={objectType:"concept",id:c.parent().attr("id"),content:n},e={id:c.parent().attr("id"),content:n},this.socket.emit("updateConceptContent",JSON.stringify(e)),this._logAction("update",i)),this.contentBeforeEdit=""},e.prototype.sendRemoveConcept=function(t){var e;return e=$(t).attr("id"),this.removeConcept(t),this.socket.emit("deleteConcept",e)},e.prototype.removeConcept=function(t){var e,o=this;return e=$(t).attr("id"),this.deleteConnectionsBetween(e),$(t).fadeOut(300,function(){var n;return $(t).remove(),n={objectType:"concept",id:e},o._logAction("delete",n)})},e.prototype.onClickHandlerTrashcan=function(){var t=this;return $("#ut_tools_conceptmapper_dialog").text("Do you really want to delete all concepts and relations?"),$("#ut_tools_conceptmapper_dialog").dialog({title:"Remove everything?",resizable:!1,modal:!0,autoOpen:!1,height:110,closeOnEscape:!1,dialogClass:"ut_tools_conceptmapper_dialog",buttons:{Yes:function(){return t.sendDeleteAll(),$("#ut_tools_conceptmapper_dialog").dialog("close")},No:function(){return $("#ut_tools_conceptmapper_dialog").dialog("close")}}}),$("#ut_tools_conceptmapper_dialog").dialog("open"),$(".ui-dialog :button").blur()},e.prototype.sendDeleteAll=function(){return this.socket.emit("deleteAll"),this.deleteAll()},e.prototype.deleteAll=function(){var t=this;return $.each($("#ut_tools_conceptmapper_map .ut_tools_conceptmapper_concept"),function(e,o){return t.removeConcept(o)})},e.prototype.setMode=function(t){var e=this;if(t===this.mode);else switch(t){case this.NODE_MODE:return $("#ut_tools_conceptmapper_map").find(".ut_tools_conceptmapper_concept").each(function(t,o){return e.setConceptNodeMode(o)}),$(".ut_tools_conceptmapper_template").removeClass("ut_tools_conceptmapper_lowLight"),$("#ut_tools_conceptmapper_linkButton").removeClass("pressedButton"),$("#ut_tools_conceptmapper_linkButton").addClass("activeButton"),jsPlumb.unmakeEverySource(),jsPlumb.unmakeEveryTarget(),$(this.sourceNode).removeClass("highlight_concept"),$(this.targetNode).removeClass("highlight_concept"),this.sourceNode=void 0,this.targetNode=void 0,this.mode=t;case this.LINK_MODE:return $("#ut_tools_conceptmapper_map").find(".ut_tools_conceptmapper_concept").each(function(t,o){return e.setConceptLinkMode(o)}),$(".ut_tools_conceptmapper_template").addClass("ut_tools_conceptmapper_lowLight"),$("#ut_tools_conceptmapper_map").find(".ut_tools_conceptmapper_concept").css("opacity","1.0"),$("#ut_tools_conceptmapper_linkButton").addClass("pressedButton"),$("#ut_tools_conceptmapper_linkButton").removeClass("activeButton"),this.mode=t;default:return console.log("ConceptMapper.setMode: unrecognized mode "+t+" doing nothing.")}},e.prototype.setConceptNodeMode=function(t){return $(t).draggable("enable")},e.prototype.setConceptLinkMode=function(t){var e=this;return $(t).draggable("disable"),jsPlumb.makeSource(t,{}),jsPlumb.makeTarget(t,{dropOptions:{hoverClass:"jsPlumbHover"},beforeDrop:function(t){return t.sourceId===t.targetId?("true"===e.configuration.debug.value&&console.log("Creating edges between same source and target is disallowed."),!1):e.connectionExists(t.sourceId,t.targetId)?("true"===e.configuration.debug.value&&console.log("An edge between concepts already exists -> delete it (instead of create a new one)."),e.sendDeleteConnectionsBetween(t.sourceId,t.targetId),!1):("true"===e.configuration.debug.value&&console.log("All conditions met, create a new edge."),!0)}})},e.prototype.onClickEdgeHandler=function(t){var e,o,n,i;return void 0===this.sourceNode?(this.sourceNode=t.currentTarget,$(this.sourceNode).toggleClass("highlight_concept")):t.currentTarget===this.sourceNode?($(t.currentTarget).toggleClass("highlight_concept"),this.sourceNode=void 0):this.targetNode=t.currentTarget,void 0!==this.sourceNode&&void 0!==this.targetNode?(n=$(this.sourceNode).attr("id"),i=$(this.targetNode).attr("id"),this.connectionExists(n,i)?this.sendDeleteConnectionsBetween(n,i):("true"===this.configuration.debug.value&&console.log("Connection does not exist -> create."),e=jsPlumb.connect({source:n,target:i}),o={source:n,target:i},this.socket.emit("createRelation",JSON.stringify(o))),$(this.sourceNode).removeClass("highlight_concept"),$(this.targetNode).removeClass("highlight_concept"),this.sourceNode=void 0,this.targetNode=void 0,jsPlumb.repaintEverything()):void 0},e.prototype.connectionExists=function(t,e){var o;return o=jsPlumb.getConnections({source:t,target:e}),o=o.concat(jsPlumb.getConnections({source:e,target:t})),o.length>0},e.prototype.sendDeleteConnectionsBetween=function(t,e){var o;return this.deleteConnectionsBetween(t,e),o={source:t,target:e},this.socket.emit("deleteRelation",JSON.stringify(o))},e.prototype.deleteConnectionsBetween=function(t,e){var o,n,i,c,r,a;for(n=jsPlumb.getConnections({source:t,target:e}),n=n.concat(jsPlumb.getConnections({source:e,target:t})),a=[],c=0,r=n.length;r>c;c++)o=n[c],jsPlumb.detach(o),i={objectType:"relation",id:o.id},a.push(this._logAction("delete",i));return a},e.prototype.getConnectionById=function(t){var e,o,n,i;for(i=jsPlumb.getConnections(),o=0,n=i.length;n>o;o++)if(e=i[o],e.id===t)return e},e.prototype.getConceptMapAsJSon=function(){var t,e,o,n,i,c,r,a;for(t={},t.user=this.user,t.meta=this.meta,e=[],$.each($("#ut_tools_conceptmapper_map .ut_tools_conceptmapper_concept"),function(t,o){var n;return n={},n.x=$(o).offset().left,n.y=$(o).offset().top,n.content=$(o).find("p").text(),n.id=$(o).attr("id"),n.type=$(o).hasClass("ut_tools_conceptmapper_conceptSelector")?"ut_tools_conceptmapper_conceptSelector":"ut_tools_conceptmapper_conceptTextarea",e.push(n)}),t.concepts=e,i=[],a=jsPlumb.getConnections(),c=0,r=a.length;r>c;c++)o=a[c],n={},n.source=o.sourceId,n.target=o.targetId,n.id=o.id,n.content=o.getOverlay("label").getLabel(),i.push(n);return t.relations=i,t},e.prototype.saveConceptMap=function(){var t,e;return t=this.getConceptMapAsJSon(),e={objectType:"conceptMap",content:t,id:this.meta.target.id},this.socket.emit("saveConcept",JSON.stringify(t)),this._logAction("save",e)},e.prototype.loadConceptMap=function(){return this.socket.emit("loadConcept")},e.prototype.setConceptMapFromJSON=function(t){var e,o,n,i,c,r,a,s,p,l,u;for(this.isCurrentlyLogging=!1,this.deleteAll(),this.meta=t.meta,l=t.concepts,r=0,s=l.length;s>r;r++)e=l[r],this.createConcept(e.id,e.content,e.x,e.y,e.type);for(u=t.relations,a=0,p=u.length;p>a;a++)c=u[a],o=jsPlumb.connect({source:c.source,target:c.target}),o.id=c.id,o.getOverlay("label").setLabel(c.content);return this.isCurrentlyLogging=!0,jsPlumb.repaintEverything(),n={concepts:t.concepts,relations:t.relations},i={objectType:"conceptMap",content:n,id:this.meta.target.id},this._logAction("load",i)},e}(BaseCtrl),window.ut.tools.conceptmapper.ConceptMapper.$inject=["$scope","Socket"],angular.module("myApp").controller("ConceptMapperCtrl",window.ut.tools.conceptmapper.ConceptMapper);