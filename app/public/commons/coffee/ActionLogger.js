"use strict";var _base,_base1,__bind=function(t,e){return function(){return t.apply(e,arguments)}};null==window.ut&&(window.ut={}),null==(_base=window.ut).commons&&(_base.commons={}),null==(_base1=window.ut.commons).actionlogging&&(_base1.actionlogging={}),window.ut.commons.actionlogging.ActionLogger=function(){function t(){this.log=__bind(this.log,this),this.setProvider=__bind(this.setProvider,this),this.setGenerator=__bind(this.setGenerator,this),this.setTarget=__bind(this.setTarget,this),console.log("Initializing ActionLogger"),console.log("...setting default logging target: nullLogging."),this.loggingTarget=this.nullLogging,this.actorId="unknownActorId",this.target={objectType:"unknownType",id:"00000000-0000-0000-0000-000000000000",displayName:"unnamed"},this.generator={objectType:"unknownType",url:"unknown",id:"00000000-0000-0000-0000-000000000000"},this.provider={objectType:"unknownType",id:"00000000-0000-0000-0000-000000000000"}}return t.prototype.setActorId=function(t){return this.actorId=t},t.prototype.setLoggingTarget=function(t){return this.loggingTarget=t},t.prototype.setTarget=function(t){return this.target=t},t.prototype.setGenerator=function(t){return this.generator=t},t.prototype.setProvider=function(t){return this.provider=t},t.prototype.setLoggingTargetByName=function(t){return console.log("ActionLogger: setting logging target (by name) to "+t),"null"===t?this.loggingTarget=this.nullLogging:"console"===t?this.loggingTarget=this.consoleLogging:"consoleShort"===t?this.loggingTarget=this.consoleLoggingShort:"dufftown"===t?this.loggingTarget=this.dufftownLogging:"opensocial"===t?this.loggingTarget=this.opensocialLogging:"server"===t?this.loggingTarget=this.serverLogging:(console.log("ActionLogger: unknown logging target, setting to 'null'"),this.loggingTarget=this.nullLogging)},t.prototype.log=function(t,e){var o,n;return o={},o.published=(new Date).toISOString(),n={},n.id=this.actorId,n.objectType="person",o.actor=n,o.verb=t,o.object=e,o.target=this.target,o.generator=this.generator,o.provider=this.provider,this.loggingTarget(o)},t.prototype.nullLogging=function(){},t.prototype.consoleLogging=function(t){return console.log(JSON.stringify(t,void 0,2))},t.prototype.consoleLoggingShort=function(t){return console.log("ActionLogger: "+t.verb+" "+t.object.objectType+", id: "+t.object.id)},t.prototype.opensocialLogging=function(t){var e;return void 0!==osapi?(e={userId:"@viewer",groupId:"@self",activity:t},console.log("ActionLogger: logging to Graasp: "+t.verb+" "+t.object.objectType+", id: "+t.object.id),osapi.activitystreams.create(e).execute(function(t){return void 0!==t.id?console.log("ActionLogger: sucessfully logged via osapi, response.id: "+t.id):(console.log("ActionLogger: something went wrong when logging via osapi:"),console.log(t))})):console.log("ActionLogger: can't log, osapi is undefined.")},t.prototype.dufftownLogging=function(t){return console.log("ActionLogger: logging to go-lab.collide.info: "+t.verb+" "+t.object.objectType+", id: "+t.object.id),$.ajax({type:"POST",url:"http://go-lab.collide.info/activity",data:JSON.stringify(t),contentType:"application/json",success:function(t){return console.log("POST actionlog success, response: "+t.statusText)},error:function(t){return console.log("POST actionlog failed, response: "+t.statusText)}})},t.prototype.serverLogging=function(t){var e,o,n,i,r;return n=location.protocol,i=n.concat("//"),o=i.concat(window.location.hostname),r="/log",e=o+":"+location.port+r,console.log("ActionLogger: logging to "+e+": "+t.verb+" "+t.object.objectType+", id: "+t.object.id),$.ajax({type:"POST",url:e,data:JSON.stringify(t),contentType:"application/json",success:function(t){return console.log("POST actionlog success, response: "+t.statusText)},error:function(t){return console.log("POST actionlog failed, response: "+t.statusText)}})},t}();